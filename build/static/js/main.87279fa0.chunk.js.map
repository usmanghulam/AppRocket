{"version":3,"sources":["Redux/actions/index.js","components/users/signUp.js","components/users/login.js","components/chatroom/container/index.js","routes.js","Redux/reducers/index.js","index.js"],"names":["submitSignUp","values","setSubmiting","props","paresedValues","JSON","stringify","localStorage","setItem","axios","post","then","res","catch","err","console","error","withRouter","connect","state","val","className","style","width","initialValues","email","password","validate","errors","test","onSubmit","setSubmitting","dispatch","touched","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","placeholder","type","name","id","onChange","onBlur","value","disabled","login","index","Component","routes","path","component","loginUser","getItem","user","parse","Login","INTIAL_STATE","Reducer","store","createStore","Reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"2TAIaA,G,MAAe,SAACC,EAAOC,EAAaC,GAC7C,IAAIC,EAAgBC,KAAKC,UAAUL,GACnCM,aAAaC,QAAQ,YAAYJ,GACjCK,IAAMC,KAAK,UAAU,CAACT,WACrBU,MAAK,SAAAC,GACCA,GAAKV,GAAa,MACtBW,OAAM,SAAAC,GACLC,QAAQC,MAAMF,GACdZ,GAAa,QCyENe,cAAWC,aANF,SAAAC,GACtB,MAAO,CACLC,IAAMD,EAAMC,OAIkC,CAACpB,gBAAzBkB,EA/EX,SAAAf,GACd,OACC,kBAAC,WAAD,KACC,yBAAKkB,UAAU,sBAAsBC,MAAO,CAACC,MAAM,QAClD,wBAAIF,UAAU,iCAAd,WACD,kBAAC,IAAD,CACGG,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAAA1B,GACR,IAAM2B,EAAS,GASf,OARK3B,EAAOwB,MAIT,2CAA2CI,KAAK5B,EAAOwB,SAExDG,EAAOH,MAAQ,yBALpBG,EAAOH,MAAQ,oBAOLG,GAETE,SAAU,SAAC7B,EAAD,GAAgC,IAArB8B,EAAoB,EAApBA,cACnB5B,EAAM6B,SAAShC,EAAaC,EAAO8B,OAGpC,gBACC9B,EADD,EACCA,OACA2B,EAFD,EAECA,OACAK,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OAUC,0BAAMP,SAAUM,GACnB,yBAAKf,UAAU,cACf,2BAAOiB,QAAQ,sBAAf,iBACK,2BACJjB,UAAU,eACVkB,YAAY,cACNC,KAAK,QACXC,KAAK,QACLC,GAAG,qBACGC,SAAUT,EACVU,OAAQT,EACRU,MAAO5C,EAAOwB,QAEfG,EAAOH,OAASQ,EAAQR,OAAS,0BAAMJ,UAAU,eAAeO,EAAOH,QAE7E,yBAAKJ,UAAU,cACf,2BAAOiB,QAAQ,qBAAf,YACK,2BACJjB,UAAU,eACJmB,KAAK,WACXC,KAAK,WACLC,GAAG,oBACGC,SAAUT,EACVU,OAAQT,EACRU,MAAO5C,EAAOyB,WAEpBE,EAAOF,UAAYO,EAAQP,UAAY,0BAAML,UAAU,eAAeO,EAAOF,UACxEE,EAAOF,UAAYO,EAAQP,UAAY,0BAAML,UAAU,eAAeO,EAAOF,WAE9E,4BAAQL,UAAS,cAASgB,EAAY,6BAAoCG,KAAK,SAASM,SAAUT,GAAlG,oBC1DKU,EARD,WACV,OACI,+BCQOC,E,iLARP,OACI,0C,GAHQC,aCMdC,E,iLAEF,OACE,6BACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW,WACzB,IAAIC,EAAY9C,aAAa+C,QAAQ,aACjCC,EAAOlD,KAAKmD,MAAMH,GACtB,OAAOE,GAAQA,EAAK9B,OAAS8B,EAAK7B,SAAW,kBAAC,EAAD,MAAc,kBAAC,EAAD,SAE7D,kBAAC,IAAD,CAAOyB,KAAK,SAASC,UAAWK,S,GATnBR,aAeNhC,cAAWiC,GCrBpBQ,EAAe,CACnBtC,IAAM,GAMOuC,EAHC,WAAkC,IAAjCxC,EAAgC,uDAA1BuC,EAA0B,iCAC/C,OAAOvC,GCIHyC,EAAQC,sBAAYC,EACzBC,8BAAoBC,0BAAgBC,OAGrCC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GAChB,kBAAC,IAAD,KACA,kBAAC,EAAD,QAGDQ,SAASC,eAAe,W","file":"static/js/main.87279fa0.chunk.js","sourcesContent":["import axios from 'axios';\nimport * as vari from '../constants';\n\n\nexport const submitSignUp = (values,setSubmiting,props) => {\n    let paresedValues = JSON.stringify(values);\n    localStorage.setItem(\"appRocket\",paresedValues)\n    axios.post(\"/signUp\",{values})\n    .then(res => {\n        if(res) setSubmiting(false)\n    }).catch(err => {\n        console.error(err)\n        setSubmiting(false)\n    })\n}","import React, { Fragment } from 'react';\nimport { Formik } from 'formik';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { submitSignUp } from '../../Redux/actions'\n\nconst SignUp = props => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"container mt-5 pt-5\" style={{width:\"40%\"}}>\n\t\t\t\t<h3 className=\"text-center mb-5 text-primary\">Sign Up</h3>\n\t\t\t<Formik\n      initialValues={{ email: '', password: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n\t\t\t\t\terrors.email = 'Email is required'\n\t\t\t\t}\n\t\t\t\telse if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        props.dispatch(submitSignUp(values,setSubmitting,props))\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n        <form onSubmit={handleSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <input\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder=\"abc@abc.com\"\n            type=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tid=\"exampleInputEmail1\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n          />\n          {errors.email && touched.email && <span className=\"text-danger\">{errors.email}</span>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"exampleInputPass1\">Password</label>\n          <input\n\t\t\t\t\t\tclassName=\"form-control\"\n            type=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tid=\"exampleInputPass1\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n          />\n\t\t\t\t\t{errors.password && touched.password && <span className=\"text-danger\">{errors.password}</span>}\n          {errors.password && touched.password && <span className=\"text-danger\">{errors.password}</span>}\n\t\t\t\t\t</div>\n          <button className={`btn ${isSubmitting ? `btn-success` : `btn-primary`}`} type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </form>\n      )}\n    \t</Formik>\n\t\t\t</div> \n\t\t</Fragment>\n\t);\n};\n\nconst mapStatetoProps = state => {\n  return {\n    val : state.val\n  }\n}\n\nexport default withRouter(connect(mapStatetoProps,{submitSignUp})(SignUp));","import React from 'react';\n\nconst login = () => {\n    return (\n        <div>\n            \n        </div>\n    );\n};\n\nexport default login;","import React, { Component } from 'react';\n\nclass index extends Component {\n    render() {\n        return (\n            <div>\n                Usman\n            </div>\n        );\n    }\n}\n\nexport default index;","import React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\n\n// all components\nimport SignUp from './components/users/signUp';\nimport Login from './components/users/login';\nimport Chatroom from './components/chatroom/container/index'\n\nclass routes extends Component {\n  render() {\n    return (\n      <div>\n        <Route path=\"/\" component={()=>{\n          let loginUser = localStorage.getItem('appRocket');\n          let user = JSON.parse(loginUser);\n          return user && user.email && user.password ? <Chatroom/> : <SignUp/>\n        }}/>\n        <Route path=\"/login\" component={Login}/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(routes);","\n\nconst INTIAL_STATE = {\n  val : 0\n}\n\nconst Reducer = (state=INTIAL_STATE, actions) => {\n  return state;\n}\nexport default Reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\n\nimport Routes from './routes';\nimport Reducers from './Redux/reducers';\n\nconst store = createStore(Reducers,\n\tcomposeWithDevTools(applyMiddleware(thunk)),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n\t  <Router>\n\t\t\t<Routes />\n\t</Router>\n  </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}